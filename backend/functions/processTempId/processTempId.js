let admin=require("firebase-admin"),serviceAccount=require("../firebase-admin-serviceAccountKey.json"),firestore=require("firebase/firestore"),db=(admin.apps.length||admin.initializeApp({credential:admin.credential.cert(serviceAccount)}),admin.firestore());async function deleteTempIdFromDatabase(e){db.collection("users").doc(e).update({temp_id:"undefined"})}async function queryTempIdFromDatabase(e){try{let r=null;var t=await db.collection("users").where("temp_id","==",e).get();return t.empty||t.forEach(async e=>{r={uid:e.data().uid,email:e.data().email}}),r}catch(e){throw e}}exports.handler=async(e,r)=>{var t={"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"POST, OPTIONS, GET","Access-Control-Allow-Headers":"Content-Type"};if("OPTIONS"==e.httpMethod)return{statusCode:200,headers:t,body:JSON.stringify({message:"success"})};e=JSON.parse(e.body).temp_id;try{var a=await queryTempIdFromDatabase(e);return null===a?{statusCode:204,headers:t,body:JSON.stringify({message:"No record found"})}:(await deleteTempIdFromDatabase(a.uid),{statusCode:200,headers:t,body:JSON.stringify(a)})}catch(e){return console.error("Error in processing tempId",e),{statusCode:500,headers:t,body:JSON.stringify({message:"Internal server error"})}}};