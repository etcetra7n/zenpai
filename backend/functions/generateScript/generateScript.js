let admin=require("firebase-admin"),Groq=require("groq-sdk"),serviceAccount=require("../firebase-admin-serviceAccountKey.json"),db=(admin.apps.length||admin.initializeApp({credential:admin.credential.cert(serviceAccount)}),admin.firestore());async function getUserPlan(t){try{db.collection("users").doc(t).get().then(t=>{return t.get("plan")})}catch(t){throw t}}async function getLastHourRequests(t){try{var e=new Date;e.setHours(e.getHours()-1),db.collection("instruct_log").where("uid","==",t).where("timestamp",">",e).get().then(t=>{return t.size})}catch(t){throw t}}async function logInstruction(t,e,n,i,r){try{await db.collection("instruct_log").add({instruction:t,uid:e,file_num:n,file_type:i,result:r,timestamp:admin.firestore.FieldValue.serverTimestamp()})}catch(t){throw t}}async function generateScript(t,e,n){var i,r=new Groq;let a="",o=(a=1==e?`You are given a ${n} file, write a python function called 'operation' which takes the file path as argument and "${t}". Save the result in a new file. Don't include any other details`:`You are given a list of files, write a python function called 'operation' which takes the list of file path as argument and "${t}". Save the result in new files. Don't include any other details`,"");for await(i of await r.chat.completions.create({messages:[{role:"system",content:"You are good in converting instructions into python scripts"},{role:"user",content:a}],model:"llama3-70b-8192",temperature:1,max_tokens:2024,top_p:1,stream:!0,stop:null}))o+=i.choices[0]?.delta?.content||"";return o}exports.handler=async(t,e)=>{if("POST"!==t.httpMethod)return{statusCode:405,body:"Method Not Allowed"};t=JSON.parse(t.body);let n=(await generateScript(t.instruction,t.file_num,t.file_type)).split("```")[1];return(n=n.startsWith("python")||n.startsWith("Python")?n.substring(7):n).startsWith(" ")&&(n=n.substring(1)),{statusCode:200,body:JSON.stringify({py_script:n})}};